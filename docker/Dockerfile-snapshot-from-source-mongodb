#
# Copyright (C) 2015-2019 Philip Helger (www.helger.com)
# philip[at]helger[dot]com
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#         http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# Use an official Tomcat runtime as a base image
FROM tomcat:10.1-jdk21

# Use non-blocking random
ENV CATALINA_OPTS="$CATALINA_OPTS -Djava.security.egd=file:/dev/urandom"

# Special encoded slash handling for SMP
#   Tomcat 10 removed: org.apache.tomcat.util.buf.UDecoder.ALLOW_ENCODED_SLASH=true
#   See: https://tomcat.apache.org/migration-10.html#encoded_slash
# Second sed command adds a Valve to the Host element to suppress server info and error report
RUN  sed -i 's/<Connector port="8080" protocol="HTTP\/1.1"/<Connector port="8080" protocol="HTTP\/1.1" encodedSolidusHandling="passthrough"/' ${CATALINA_HOME}/conf/server.xml \
  && sed -i 's/^.*<\/Host>/<Valve className="org.apache.catalina.valves.ErrorReportValve" showReport="false" showServerInfo="false" \/>\n&/' ${CATALINA_HOME}/conf/server.xml  

# MinRAMPercentage - for low memory containers (<250MB)
# MaxRAMPercentage - for large memory containers (>250MB)
# See: https://medium.com/pernod-ricard-tech/how-to-control-java-memory-in-tomcat-running-on-docker-cec267f858d4
ENV CATALINA_OPTS="$CATALINA_OPTS -XX:InitialRAMPercentage=10 -XX:MinRAMPercentage=50 -XX:MaxRAMPercentage=80"

LABEL vendor="Philip Helger"
LABEL version="HEAD"

# Install vim, Java 11 JDK, Maven and Git
RUN apt-get update \
  && apt-get upgrade -y \
  && apt-get install -y vim git maven \
  && rm -rf /var/lib/apt/lists/*
 
# Checkout from git and build
WORKDIR /home/git
RUN echo Building phoss SMP latest SNAPSHOT \
  && git clone https://github.com/phax/phoss-smp.git . \
  && git checkout -b work \
  && mvn clean install -DskipTests -q \
# Copy result to Tomcat webapps dir
  && cp -r phoss-smp-webapp-mongodb/target/phoss-smp-webapp-mongodb-*/ $CATALINA_HOME/webapps/ROOT \
  && mvn clean -q \
  && rm -rf /root/.m2/repository
